---

- name: apt update
  become: yes
  apt:
    upgrade: 'yes'
    update_cache: yes

- name: Adding Apt Key For Jenkins
  become: yes
  apt_key:
    url: 'https://pkg.jenkins.io/debian-stable/jenkins.io.key'
    state: present
    validate_certs: no

- name: Checking for the presence of Jenkins List
  stat:
    path: /etc/apt/sources.list.d/jenkins.list
  register: jenkins_list

- name: Adding Jenkins Source List
  become: yes
  lineinfile:
    path: /etc/apt/sources.list.d/jenkins.list
    line: deb http://pkg.jenkins.io/debian-stable binary/
    create: yes
    state : present
  when: not jenkins_list.stat.exists

- name: Installing Jenkins
  become: yes
  apt:
    name: jenkins
    state: present
    update_cache: yes
  register: jenkins_install

- name: Configure Jenkins port
  become : yes
  lineinfile:
    path: /etc/default/jenkins
    regexp: "^HTTP_PORT=8080"
    line: "HTTP_PORT=9000"

- name: Groovy Script- Create Directory
  become: true
  file:
    path: '/var/lib/jenkins/init.groovy.d'
    state: directory
    mode: 0755
    owner: jenkins

- name: Adding the environment variables
  become: yes
  blockinfile:
    path: /etc/environment
    marker: '## JENKINS ENV VARIABLES'
    block: |
     JENKINS_PASSWORD={{ jenkins_password }}
      JENKINS_USER={{ jenkins_user }}

- name: Creating Jenkins User - Automation
  become: true
  template:
    force: yes
    src: '/bakerx/cm/roles/jenkins/templates/groovy.groovy'
    dest: '/var/lib/jenkins/init.groovy.d/groovy.groovy'
    mode: 0755
    owner: jenkins

- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted

- name: Wait while Jenkins is getting restarted
  wait_for:
    port: 9000
    delay: 30

- name: Install build pipeline plugin
  jenkins_plugin:
    name: build-pipeline-plugin
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: pipeline_installed
  until: pipeline_installed is not failed

- name: Install Git plugin
  jenkins_plugin:
    name: git
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: git_installed
  until: git_installed is not failed

- name: Install workspace cleanup plugin
  jenkins_plugin:
    name: ws-cleanup
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: ws_installed
  until: ws_installed is not failed

- name: Install workflow aggregator plugin
  jenkins_plugin:
    name: workflow-aggregator
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: wa_installed
  until: wa_installed is not failed

- name: Install cloudbees credentials plugin
  jenkins_plugin:
    name: cloudbees-credentials
    url_username: admin
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: cc_installed
  until: cc_installed is not failed

- name: Install credentials binding plugin
  jenkins_plugin:
    name: credentials-binding
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: cb_installed
  until: cb_installed is not failed

- name: Install pipeline stage view plugin
  jenkins_plugin:
    name: pipeline-stage-view
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: psv_installed
  until: psv_installed is not failed

- name: Install github plugin
  jenkins_plugin:
    name: github
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: github_installed
  until: github_installed is not failed

- name: Install jacoco plugin
  jenkins_plugin:
    name: jacoco
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: jacoco_installed
  until: jacoco_installed is not failed

- name: Install junit plugin
  jenkins_plugin:
    name: junit
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: junit_installed
  until: junit_installed is not failed

- name: Install checkstyle plugin
  jenkins_plugin:
    name: checkstyle
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: checkstyle_installed
  until: checkstyle_installed is not failed

- name: Install Warnings Next Generation plugin
  jenkins_plugin:
    name: warnings-ng
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: warningsng_installed
  until: warningsng_installed is not failed

- name: Install Code Coverage plugin
  jenkins_plugin:
    name: code-coverage-api
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: ccoverageapi_installed
  until: ccoverageapi_installed is not failed
  
- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted

- name: Wait while Jenkins is getting restarted
  wait_for:
    port: 9000
    delay: 30

- name: Disable web session check for API calls - Tweaking Jenkins settings
  become: true
  lineinfile: dest=/etc/default/jenkins
    regexp=^JAVA_ARGS="-Djava.awt.headless=true"
    line=JAVA_ARGS="-Djava.awt.headless=true -Dhudson.security.csrf.DefaultCrumbIssuer.EXCLUDE_SESSION_ID=true"

- name: Removing Groovy Script post user creation 
  file:
    path: '/var/lib/jenkins/init.groovy.d/groovy.groovy'
    state: absent

- name: Getting Jenkins CLI Jar
  get_url:
    url: "{{jenkins_url}}/jnlpJars/jenkins-cli.jar"
    dest: "~/"
    mode: 0755

- name: Install python packages
  pip:
    name: ["boto", "boto3", "jenkins-job-builder"]

- name: Have the Jenkins configuration file in place (jenkins_jobs.ini)
  template:
    src: "/bakerx/cm/roles/jenkins/templates/jenkins_jobs.ini"
    dest: ~/jenkins_jobs.ini

- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted

- name: Wait while Jenkins is getting restarted
  wait_for:
    port: 9000
    delay: 30

- name: making a job directory to put all the jenkins jobs
  file:
    path: ~/jobs
    state: directory

- name: Get crumb request
  uri:
    url: '{{ jenkins_url }}/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)'
    user: '{{ jenkins_user }}'
    password: '{{ jenkins_password }}'
    force_basic_auth: yes
    return_content: yes    
  register: crumb

- name: Add git credentials to Jenkins
  uri:
    url: '{{ jenkins_url }}/credentials/store/system/domain/_/createCredentials'
    method: POST
    user: '{{ jenkins_user }}'
    password: '{{ jenkins_password }}'
    force_basic_auth: yes
    headers:
      Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
      Content-Type: application/xml
    body: |
      <com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>
        <scope>GLOBAL</scope>
        <id>GIT_CREDENTIALS</id>
        <description>Git credentials to clone iTrust</description>
        <username>{{ git_username }}</username>
        <password>{{ git_password }}</password>
      </com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>

- name: Change the SSH config file
  lineinfile:
    path: /etc/ssh/ssh_config
    regexp: "#   StrictHostKeyChecking ask"
    line: "   StrictHostKeyChecking no"


