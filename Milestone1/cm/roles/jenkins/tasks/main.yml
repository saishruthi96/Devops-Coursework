---

- name: apt update
  become: yes
  apt:
    upgrade: 'yes'
    update_cache: yes

- name: Adding Apt Key For Jenkins
  become: yes
  apt_key:
    url: 'https://pkg.jenkins.io/debian-stable/jenkins.io.key'
    state: present
    validate_certs: no

- name: Checking for the presence of Jenkins List
  stat:
    path: /etc/apt/sources.list.d/jenkins.list
  register: jenkins_list

- name: Adding Jenkins Source List
  become: yes
  lineinfile:
    path: /etc/apt/sources.list.d/jenkins.list
    line: deb http://pkg.jenkins.io/debian-stable binary/
    create: yes
    state : present
  when: not jenkins_list.stat.exists


- name: Installing Jenkins
  become: yes
  apt:
    name: jenkins
    state: present
    update_cache: yes
  register: jenkins_install

# - name: Restarting Jenkins
#   service:
#     name: jenkins
#     state: restarted

# - name: Stop Jenkins server
#   service:
#     name: jenkins
#     state: stopped

# - name: Restarting Jenkins
#   service:
#     name: jenkins
#     state: restarted

# - name: Wait until Jenkins web interface is available
#   wait_for: "host=192.168.33.20 port=9000 state=present delay=5 timeout=300"

# - name: Wait until Jenkins web interface is ready
#   command: 'curl -s -o /dev/null -w "%200" http://192.168.33.20:9000/cli/'
#   register: result
#   until: 'result.stdout[0] in ["2", "3"]' # 2xx or 3xx status code
#   retries: 50
#   delay: 10
#   changed_when: false

# - name: Wait untils Jenkins web API is available
#   shell: curl --head --silent http://192.168.33.20:9000/cli/
#   register: result
#   until: result.stdout.find("200 OK") != -1
#   retries: 12
#   delay: 5

# - name: Wait For Jenkins To Come Up
#   uri:
#     url: '{{ jenkins_url }}'
#     status_code: '403'
#   register: result
#   until: result.status == 403
#   retries: 6
#   delay: 15
#   when: jenkins_install.changed

- name: Configure Jenkins port
  become : yes
  lineinfile:
    path: /etc/default/jenkins
    regexp: "^HTTP_PORT=8080"
    line: "HTTP_PORT=9000"

# - name: Restarting Jenkins
#   service:
#     name: jenkins
#     state: restarted

# - name: Wait while Jenkins is getting restarted
#   wait_for:
#     port: 9000
#     delay: 


- name: Groovy Script- Create Directory
  become: true
  file:
    path: '/var/lib/jenkins/init.groovy.d'
    state: directory
    mode: 0755
    owner: jenkins

- name: Adding the environment variables
  become: yes
  blockinfile:
    path: /etc/environment
    marker: '## JENKINS ENV VARIABLES'
    block: |
     JENKINS_PASSWORD={{ jenkins_password }}
      JENKINS_USER={{ jenkins_user }}

- name: Creating Jenkins User - Automation
  become: true
  template:
    force: yes
    src: '/bakerx/cm/roles/jenkins/templates/groovy.groovy'
    dest: '/var/lib/jenkins/init.groovy.d/groovy.groovy'
    mode: 0755
    owner: jenkins

# - name: Stop Jenkins server
#   service:
#     name: jenkins
#     state: stopped

- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted

- name: Wait while Jenkins is getting restarted
  wait_for:
    port: 9000
    delay: 30

- name: Install build pipeline plugin
  jenkins_plugin:
    name: build-pipeline-plugin
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: pipeline_installed
  until: pipeline_installed is not failed

- name: Install Git plugin
  jenkins_plugin:
    name: git
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: git_installed
  until: git_installed is not failed

- name: Install workspace cleanup plugin
  jenkins_plugin:
    name: ws-cleanup
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: ws_installed
  until: ws_installed is not failed

- name: Install workflow aggregator plugin
  jenkins_plugin:
    name: workflow-aggregator
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: wa_installed
  until: wa_installed is not failed

- name: Install cloudbees credentials plugin
  jenkins_plugin:
    name: cloudbees-credentials
    url_username: admin
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: cc_installed
  until: cc_installed is not failed

- name: Install credentials binding plugin
  jenkins_plugin:
    name: credentials-binding
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: cb_installed
  until: cb_installed is not failed

- name: Install pipeline stage view plugin
  jenkins_plugin:
    name: pipeline-stage-view
    url_username: '{{ jenkins_user }}'
    url_password: '{{ jenkins_password }}'
    url: '{{ jenkins_url }}'
  retries: 15
  delay: 10
  register: psv_installed
  until: psv_installed is not failed

- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted

- name: Wait while Jenkins is getting restarted
  wait_for:
    port: 9000
    delay: 30


- name: Disable web session check for API calls - Tweaking Jenkins settings
  become: true
  lineinfile: dest=/etc/default/jenkins
    regexp=^JAVA_ARGS="-Djava.awt.headless=true"
    line=JAVA_ARGS="-Djava.awt.headless=true -Dhudson.security.csrf.DefaultCrumbIssuer.EXCLUDE_SESSION_ID=true"

- name: Removing Groovy Script post user creation 
  file:
    path: '/var/lib/jenkins/init.groovy.d/groovy.groovy'
    state: absent

# - name: Restarting Jenkins
#   service:
#     name: jenkins
#     state: restarted

# - name: Wait while Jenkins is getting restarted
#   wait_for:
#     port: 9000
#     delay: 30

- name: Getting Jenkins CLI Jar
  get_url:
    url: "{{jenkins_url}}/jnlpJars/jenkins-cli.jar"
    dest: "~/"
    mode: 0755

- name: Install python packages
  pip:
    name: ["boto", "boto3", "jenkins-job-builder"]

- name: Have the Jenkins configuration file in place (jenkins_jobs.ini)
  template:
    src: "/bakerx/cm/roles/jenkins/templates/jenkins_jobs.ini"
    dest: ~/jenkins_jobs.ini

- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted

- name: Wait while Jenkins is getting restarted
  wait_for:
    port: 9000
    delay: 30

- name: making a job directory to put all the jenkins jobs
  file:
    path: ~/jobs
    state: directory

- name: Change the SSH config file
  lineinfile:
    path: /etc/ssh/ssh_config
    regexp: "#   StrictHostKeyChecking ask"
    line: "   StrictHostKeyChecking no"


